#!/bin/bash


echo "TEST $0 unexistant file and non-executable file"

# Emulate a situation where the test executable file does not exist
EXAMPLE="$(autotest root)/example/unexistant"
test -f "$EXAMPLE" \
	&& echo "FAIL $EXAMPLE should not exist, but it does" \
	|| echo "PASS $EXAMPLE does not exist"
autotest "$EXAMPLE" &>/dev/null \
  && echo "FAIL returns exit status 0 (expected non-zero)" \
	|| echo "PASS returns exit status 0"
unset EXAMPLE

echo "SKIP a case where a non-executable is run, preserving exit status 126"

echo "CODE 0"

function find-examples () {
  local place=$1; shift
  find "$(autotest root)/example$place" -type f "$@" -print0 | sort -z
}

echo "TEST $0 v1 examples that should return non-zero exit status"
find-examples /v1/fail | while IFS= read -d '' EXAMPLE
do
  autotest "$EXAMPLE" &>/dev/null \
    && echo "FAIL $EXAMPLE returns exit status 0 (expected non-zero)" \
    || echo "PASS $EXAMPLE returns non-zero exit status"
done
unset EXAMPLE
echo "CODE 0"

echo "TEST $0 v1 examples that should return exit status 5 (syntax error)"
find-examples /v1/fail -name 'error*' | while IFS= read -d '' EXAMPLE
do
  autotest "$EXAMPLE" &>/dev/null
  CODE=$?
  test $CODE -eq 5 \
    && echo "PASS $EXAMPLE returns exit status 5 (syntax error)" \
    || echo "FAIL $EXAMPLE returns exit status $? (expected 5)"
done
unset EXAMPLE
echo "CODE 0"

echo "TEST $0 v1 examples that should return exit status 0 (success)"
find-examples /v1/pass | while IFS= read -d '' EXAMPLE
do
  autotest "$EXAMPLE" &>/dev/null \
    && echo "PASS $EXAMPLE returns exit status 0" \
    || echo "FAIL $EXAMPLE returns exit status $? (expected 0)"
done
unset EXAMPLE
echo "CODE 0"

echo "TEST $0 script examples not being slow that should return non-zero"
find-examples /script/fail -not -name 'slow*' | while IFS= read -d '' EXAMPLE
do
  autotest "$EXAMPLE" &>/dev/null \
    && echo "FAIL $EXAMPLE returns exit status 0 (expected non-zero)" \
    || echo "PASS $EXAMPLE returns non-zero exit status"
done
unset EXAMPLE
echo "CODE 0"

echo "TEST $0 script examples that should succeed"
find-examples /script/pass | while IFS= read -d '' EXAMPLE
do
  autotest "$EXAMPLE" &>/dev/null \
    && echo "PASS $EXAMPLE returns exit status 0" \
    || echo "FAIL $EXAMPLE returns exit status $?"
done
unset EXAMPLE
echo "CODE 0"

# scripts that should fail for being too slow (exit status 124)
#TODO this will timeout the whole test
echo "TEST $0 script examples being slow that should return 124 (timeout)"
find-examples /script/fail -name 'slow*' | while IFS= read -d '' EXAMPLE
do
  autotest "$EXAMPLE" &>/dev/null
  test $? -eq 124 \
    && echo "PASS $EXAMPLE returns exit status 124 (timeout)" \
    || echo "FAIL $EXAMPLE returns exit status $? (expected 124)"
done
unset EXAMPLE
echo "CODE 0"

##
# vim modeline
# Vim: set filetype=sh ts=2 shiftwidth=2 expandtab:
