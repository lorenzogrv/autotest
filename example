#!/bin/bash

source "$(iai path test/autotest/example-utils.bash)" || exit

echo "TEST $0 any non-existing file"
EXAMPLE="$(autotest root)/example/unexistant"
test -e "$EXAMPLE" \
	&& echo "FAIL $EXAMPLE should not exist, but it does" \
	|| echo "PASS $EXAMPLE does not exist"
assert-example-status "$EXAMPLE" -eq 127
assert-example-last-code "$EXAMPLE" -eq 127
echo "CODE 0"

EXAMPLE="$(autotest root)/example/non-executable"
echo "TEST $0 the non-executable file $EXAMPLE"
test -x "$EXAMPLE" \
	&& echo "FAIL $EXAMPLE should not be executable, but it is" \
	|| echo "PASS $EXAMPLE is not executable"
assert-example-status "$EXAMPLE" -eq 126
assert-example-last-code "$EXAMPLE" -eq 126
echo "CODE 0"

echo "TEST $0 v1 examples that should fail"
find-examples /v1/fail | while IFS= read -d '' EXAMPLE; do
  assert-its-executable "$EXAMPLE"
  assert-example-status "$EXAMPLE" -gt 0
  assert-example-last-code "$EXAMPLE" -gt 0
done
echo "CODE 0"

echo "TEST $0 v1 examples considered 'success'"
find-examples /v1/pass | while IFS= read -d '' EXAMPLE; do
  assert-its-executable "$EXAMPLE"
  assert-example-status "$EXAMPLE" -eq 0
  assert-example-last-code "$EXAMPLE" -eq 0
done
echo "CODE 0"

echo "TEST $0 script examples considered 'failed' but not being slow"
find-examples /script/fail -not -name 'slow*' | while IFS= read -d '' EXAMPLE
do
  assert-its-executable "$EXAMPLE"
  assert-example-status "$EXAMPLE" -gt 0
  assert-example-last-code "$EXAMPLE" -gt 0
done
echo "CODE 0"

echo "TEST $0 script examples considered 'success'"
find-examples /script/pass | while IFS= read -d '' EXAMPLE
do
  assert-its-executable "$EXAMPLE"
  assert-example-status "$EXAMPLE" -eq 0
  assert-example-last-code "$EXAMPLE" -eq 0
done
echo "CODE 0"

##
# vim modeline
# Vim: set filetype=sh ts=2 shiftwidth=2 expandtab:
