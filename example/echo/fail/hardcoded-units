#!/bin/bash

# dinamically retrieving the code to be used
# this is done to allow linking this example from each fail-* folder
CODENAME=$(basename "$(dirname "$(realpath --no-symlinks "$0")")")
CODENAME=${CODENAME##'fail-'}
CODENAME=${CODENAME^^}
CODE=$(autotest code $CODENAME)

# functions to be DRY
function pass () { echo "PASS this is a fake success"; true; }
function fail () { echo "FAIL this is a fake failure"; return $CODE; }

case "$*" in
  # runs all test units when script receives no arguments
  '') for unit in {finish,middle,begin}; do "$0" $unit; done ;;
  # runs specified test units. Each "master" unit produces 3 units
  begin|middle|finish) for unit in {1..3}; do "$0" $1 $unit; done;;
  'begin '[1-3]|'middle '[1-3]|'finish '[1-3])
    echo "TEST $0 $*"
    case "$1" in
      begin)  case "$2" in 1) fail;; 2) pass;; 3) pass;; esac;;
      middle) case "$2" in 1) pass;; 2) fail;; 3) pass;; esac;;
      finish) case "$2" in 1) pass;; 2) pass;; 3) fail;; esac;;
    esac
    RET=$? # the code of the last command will be the hardcoded on failures
    echo "CODE $RET"; exit $RET
  ;;
  *) >&2 echo "$0: invalid test unit name: $*"; exit 2;; # wrong argv case
esac
