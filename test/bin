#!/bin/bash

source "$(iai path test/check-command.bash)" || exit
source "$(iai path test/check-command--returns.bash)" || exit
source "$(iai path test/check-command--outputs.bash)" || exit

echo "TEST $0"

#
# OLD API!
#

# keep-in-mind: "bare" autotest is "output source code"
check-command autotest --returns zero --outputs something || exit
check-command autotest checkup --returns zero --outputs something || exit
check-command autotest help --returns zero --outputs something || exit

#
# INTERNALS
#

# need autotest root to find examples later
check-command autotest root \
  --returns zero \
  --outputs string "$(iai path abc/autotest)" \
  || exit

# "unexistant" example MUST not exist
UNEXISTANT="$(autotest root)/example/unexistant"
if test -e "$UNEXISTANT"; then
  echo "FAIL $EXAMPLE should not exist, but it does"; exit 1
fi

# "non-executable" must be a non-executable file
NONEXECUTABLE="$(autotest root)/example/non-executable"
if ! test -f "$NONEXECUTABLE"; then
  echo "FAIL $NONEXECUTABLE should be a file, but it isn't"; exit 1
fi
if test -x "$NONEXECUTABLE"; then
  echo "FAIL $NONEXECUTABLE should not be executable, but it is"; exit 1
fi

#
# NEW API
#

check-command autotest "" --returns non-zero # empty filename
check-command autotest "$UNEXISTANT" --returns 127 --outputs nothing
check-command autotest "$NONEXECUTABLE" --returns 126 --outputs nothing

check-command autotest report --returns non-zero # missing filename
check-command autotest report "" --returns non-zero # empty filename
check-command autotest report "$UNEXISTANT" --returns 127
check-command autotest report "$NONEXECUTABLE" --returns 126

echo "CODE"

##
# vim modeline
# Vim: set filetype=sh ts=2 shiftwidth=2 expandtab:
